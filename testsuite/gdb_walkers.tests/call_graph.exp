set debug_commands ""
set debug_out ""
lappend debug_commands "inferior $debug_inferior"
lappend debug_commands "start 10"
lappend debug_commands "call-graph init .*"
lappend debug_commands "info call-graph"
lappend debug_out "Functions currently traced by call-graph:"
lappend debug_out "	 create_tree"
lappend debug_out "	 free_tree"
lappend debug_out "	 insert_entry"
lappend debug_out "	 main"
lappend debug_out "	 create_random_tree"
check_so_far "Debug finds all functions with info" debug_commands debug_out

lappend debug_commands "info call-graph exact"
lappend debug_out "Functions currently traced by call-graph:"
lappend debug_out "	 0x555555554a25 	 create_tree"
lappend debug_out "	 0x5555555549e4 	 free_tree"
lappend debug_out "	 0x5555555548fa 	 insert_entry"
lappend debug_out "	 0x555555554ade 	 main"
lappend debug_out "	 0x555555554a53 	 create_random_tree"
check_so_far "Debug shows exact position" debug_commands debug_out

lappend debug_commands "call-graph update - free_tree"
lappend debug_commands "info call-graph"
lappend debug_out "Functions currently traced by call-graph:"
lappend debug_out "	 create_tree"
lappend debug_out "	 insert_entry"
lappend debug_out "	 main"
lappend debug_out "	 create_random_tree"
check_so_far "Debug call-graph update removes functions" debug_commands debug_out

lappend debug_commands "call-graph update + free_tree"
lappend debug_commands "info call-graph"
lappend debug_out "Functions currently traced by call-graph:"
lappend debug_out "	 create_tree"
lappend debug_out "	 insert_entry"
lappend debug_out "	 main"
lappend debug_out "	 create_random_tree"
lappend debug_out "	 free_tree"
check_so_far "Debug call-graph update adds functions" debug_commands debug_out

lappend debug_commands "cont"
lappend debug_out "Continuing."
lappend debug_out "     --> create_random_tree"
lappend debug_out "         --> create_tree"
lappend debug_out "         <-- create_tree+45"
lappend debug_out "         --> insert_entry"
lappend debug_out "         <-- insert_entry+233"
lappend debug_out "         --> insert_entry"
lappend debug_out "         <-- insert_entry+233"
lappend debug_out "         --> insert_entry"
lappend debug_out "         <-- insert_entry+233"
lappend debug_out "         --> insert_entry"
lappend debug_out "         <-- insert_entry+233"
lappend debug_out "         --> insert_entry"
lappend debug_out "         <-- insert_entry+233"
lappend debug_out "         --> insert_entry"
lappend debug_out "         <-- insert_entry+233"
lappend debug_out "         --> insert_entry"
lappend debug_out "         <-- insert_entry+233"
lappend debug_out "         --> insert_entry"
lappend debug_out "         <-- insert_entry+233"
lappend debug_out "         --> insert_entry"
lappend debug_out "         <-- insert_entry+233"
lappend debug_out "         --> insert_entry"
lappend debug_out "         <-- insert_entry+233"
lappend debug_out "     <-- create_random_tree+138"
lappend debug_out "     --> free_tree"
lappend debug_out "         --> free_tree"
lappend debug_out "             --> free_tree"
lappend debug_out "                 --> free_tree"
lappend debug_out "                 <-- free_tree+64"
lappend debug_out "                 --> free_tree"
lappend debug_out "                 <-- free_tree+64"
lappend debug_out "             <-- free_tree+64"
lappend debug_out "             --> free_tree"
lappend debug_out "                 --> free_tree"
lappend debug_out "                 <-- free_tree+64"
lappend debug_out "                 --> free_tree"
lappend debug_out "                 <-- free_tree+64"
lappend debug_out "             <-- free_tree+64"
lappend debug_out "         <-- free_tree+64"
lappend debug_out "         --> free_tree"
lappend debug_out "             --> free_tree"
lappend debug_out "             <-- free_tree+64"
lappend debug_out "             --> free_tree"
lappend debug_out "                 --> free_tree"
lappend debug_out "                     --> free_tree"
lappend debug_out "                         --> free_tree"
lappend debug_out "                         <-- free_tree+64"
lappend debug_out "                         --> free_tree"
lappend debug_out "                             --> free_tree"
lappend debug_out "                             <-- free_tree+64"
lappend debug_out "                             --> free_tree"
lappend debug_out "                             <-- free_tree+64"
lappend debug_out "                         <-- free_tree+64"
lappend debug_out "                     <-- free_tree+64"
lappend debug_out "                     --> free_tree"
lappend debug_out "                     <-- free_tree+64"
lappend debug_out "                 <-- free_tree+64"
lappend debug_out "                 --> free_tree"
lappend debug_out "                     --> free_tree"
lappend debug_out "                         --> free_tree"
lappend debug_out "                         <-- free_tree+64"
lappend debug_out "                         --> free_tree"
lappend debug_out "                         <-- free_tree+64"
lappend debug_out "                     <-- free_tree+64"
lappend debug_out "                     --> free_tree"
lappend debug_out "                     <-- free_tree+64"
lappend debug_out "                 <-- free_tree+64"
lappend debug_out "             <-- free_tree+64"
lappend debug_out "         <-- free_tree+64"
lappend debug_out "     <-- free_tree+64"
lappend debug_out " <-- main+119"
check_so_far "Debug call-graph traces function calls" debug_commands debug_out
expect {
    "exited" {pass "Finish after continuing debug tracer"}
    default {unresolved "Didn't finish after continuing debug tracer"}
}

send "set call-graph-enabled off\nrun\n"
expect {
    # I would like to have "fail" here, but seeing as all other tests use
    # 'unresolved', for consistency this seems like the best way.
    "free_tree" { unresolved "Disabled call graph still printed trace" }
    "(gdb)" { pass "Disabled call-graph did not print trace" } 
    default { unresolved "Run with disabled call-graph did not finish" }
}
send "set call-graph-enabled on\n"

lappend debug_commands "call-graph update + free_tree"
lappend debug_out "No frame is currently selected."
check_so_far "Debug call-graph adding elements gives reasonable error" debug_commands debug_out

lappend debug_commands "call-graph clear"
lappend debug_commands "info call-graph"
lappend debug_out "Functions currently traced by call-graph:"
lappend debug_out "(gdb) "
check_so_far "Debug can clear call-graph tracers" debug_commands debug_out


unset debug_out
unset debug_commands


set plain_commands ""
set plain_out ""
lappend plain_commands "inferior $plain_inferior"
lappend plain_commands "start 10"
lappend plain_commands "call-graph init .*"
lappend plain_commands "info call-graph"
lappend plain_out "Functions currently traced by call-graph:"
lappend plain_out "(gdb)"
check_so_far "Plain doesn't find functions by default" plain_commands plain_out

lappend plain_commands "set call-graph-nondebug on"
lappend plain_commands "set call-graph-dynlibs on"
lappend plain_commands "call-graph init (free_tree|insert_entry|create_tree|create_random_tree|main)"
lappend plain_commands "info call-graph"
# TODO Figure out how to check all functions are found, no others are found,
# but not rely on the order.
lappend plain_out "Functions currently traced by call-graph:"
lappend plain_out "	 insert_entry"
lappend plain_out "	 free_tree"
lappend plain_out "	 create_tree"
lappend plain_out "	 create_random_tree"
lappend plain_out "	 main"
lappend plain_out "	 free_tree"
check_so_far "Plain finds correct functions including dynlibs" plain_commands plain_out

# This is a little "round the houses" but it gets all the tests done.
# We first remove the known address of free_tree in our test program, this
# should leave the free_tree in libc.
# Then we add it back it, showing that `call-graph update + exact` works.
# After, we remove both free_tree functions to show all matches of a regexp are
# acted upon.
# Finally, we unset call-graph-dynlibs and add all matching free_tree functions
# back in. This shows we can ignore dynamic libraries with our regular
# expressions.

lappend plain_commands "call-graph update - exact 0x5555555549e4"
lappend plain_commands "info call-graph"
lappend plain_out "Functions currently traced by call-graph:"
lappend plain_out "	 insert_entry"
lappend plain_out "	 create_tree"
lappend plain_out "	 create_random_tree"
lappend plain_out "	 main"
lappend plain_out "	 free_tree"
check_so_far "Plain call-graph update removes exact" plain_commands plain_out

lappend plain_commands "call-graph update + exact 0x5555555549e4"
lappend plain_commands "info call-graph"
lappend plain_out "Functions currently traced by call-graph:"
lappend plain_out "	 insert_entry"
lappend plain_out "	 create_tree"
lappend plain_out "	 create_random_tree"
lappend plain_out "	 main"
lappend plain_out "	 free_tree"
lappend plain_out "	 free_tree"
check_so_far "Plain call-graph update adds exact functions" plain_commands plain_out

lappend plain_commands "call-graph update - free_tree"
lappend plain_commands "info call-graph"
lappend plain_out "Functions currently traced by call-graph:"
lappend plain_out "	 insert_entry"
lappend plain_out "	 create_tree"
lappend plain_out "	 create_random_tree"
lappend plain_out "	 main"
check_so_far "Plain call-graph update removes functions" plain_commands plain_out

lappend plain_commands "set call-graph-dynlibs off"
lappend plain_commands "call-graph update + free_tree"
lappend plain_commands "info call-graph"
lappend plain_out "Functions currently traced by call-graph:"
lappend plain_out "	 insert_entry"
lappend plain_out "	 create_tree"
lappend plain_out "	 create_random_tree"
lappend plain_out "	 main"
lappend plain_out "	 free_tree"
check_so_far "Plain call-graph update adds exact functions" plain_commands plain_out

lappend plain_commands "info call-graph exact"
lappend debug_out "Functions currently traced by call-graph:"
lappend debug_out "     0x5555555548fa 	 insert_entry"
lappend debug_out "     0x555555554a25 	 create_tree"
lappend debug_out "     0x555555554a53 	 create_random_tree"
lappend debug_out "     0x555555554ade 	 main"
lappend debug_out "     0x5555555549e4 	 free_tree"
check_so_far "Plain shows exact position" plain_commands plain_out

lappend plain_commands "cont"
lappend plain_out "Continuing."
lappend plain_out "     --> create_random_tree"
lappend plain_out "         --> create_tree"
lappend plain_out "         <-- create_tree+45"
lappend plain_out "         --> insert_entry"
lappend plain_out "         <-- insert_entry+233"
lappend plain_out "         --> insert_entry"
lappend plain_out "         <-- insert_entry+233"
lappend plain_out "         --> insert_entry"
lappend plain_out "         <-- insert_entry+233"
lappend plain_out "         --> insert_entry"
lappend plain_out "         <-- insert_entry+233"
lappend plain_out "         --> insert_entry"
lappend plain_out "         <-- insert_entry+233"
lappend plain_out "         --> insert_entry"
lappend plain_out "         <-- insert_entry+233"
lappend plain_out "         --> insert_entry"
lappend plain_out "         <-- insert_entry+233"
lappend plain_out "         --> insert_entry"
lappend plain_out "         <-- insert_entry+233"
lappend plain_out "         --> insert_entry"
lappend plain_out "         <-- insert_entry+233"
lappend plain_out "         --> insert_entry"
lappend plain_out "         <-- insert_entry+233"
lappend plain_out "     <-- create_random_tree+138"
lappend plain_out "     --> free_tree"
lappend plain_out "         --> free_tree"
lappend plain_out "             --> free_tree"
lappend plain_out "                 --> free_tree"
lappend plain_out "                 <-- free_tree+64"
lappend plain_out "                 --> free_tree"
lappend plain_out "                 <-- free_tree+64"
lappend plain_out "             <-- free_tree+64"
lappend plain_out "             --> free_tree"
lappend plain_out "                 --> free_tree"
lappend plain_out "                 <-- free_tree+64"
lappend plain_out "                 --> free_tree"
lappend plain_out "                 <-- free_tree+64"
lappend plain_out "             <-- free_tree+64"
lappend plain_out "         <-- free_tree+64"
lappend plain_out "         --> free_tree"
lappend plain_out "             --> free_tree"
lappend plain_out "             <-- free_tree+64"
lappend plain_out "             --> free_tree"
lappend plain_out "                 --> free_tree"
lappend plain_out "                     --> free_tree"
lappend plain_out "                         --> free_tree"
lappend plain_out "                         <-- free_tree+64"
lappend plain_out "                         --> free_tree"
lappend plain_out "                             --> free_tree"
lappend plain_out "                             <-- free_tree+64"
lappend plain_out "                             --> free_tree"
lappend plain_out "                             <-- free_tree+64"
lappend plain_out "                         <-- free_tree+64"
lappend plain_out "                     <-- free_tree+64"
lappend plain_out "                     --> free_tree"
lappend plain_out "                     <-- free_tree+64"
lappend plain_out "                 <-- free_tree+64"
lappend plain_out "                 --> free_tree"
lappend plain_out "                     --> free_tree"
lappend plain_out "                         --> free_tree"
lappend plain_out "                         <-- free_tree+64"
lappend plain_out "                         --> free_tree"
lappend plain_out "                         <-- free_tree+64"
lappend plain_out "                     <-- free_tree+64"
lappend plain_out "                     --> free_tree"
lappend plain_out "                     <-- free_tree+64"
lappend plain_out "                 <-- free_tree+64"
lappend plain_out "             <-- free_tree+64"
lappend plain_out "         <-- free_tree+64"
lappend plain_out "     <-- free_tree+64"
lappend plain_out " <-- main+119"
check_so_far "Plain call-graph traces function calls" plain_commands plain_out
expect {
    "exited" {pass "Finish after continuing plain tracer"}
    default {unresolved "Didn't finish after continuing plain tracer"}
}

lappend plain_commands "call-graph update + free_tree"
lappend plain_out "No frame is currently selected."
check_so_far "Plain call-graph adding elements gives reasonable error" plain_commands plain_out

lappend plain_commands "call-graph clear"
lappend plain_commands "info call-graph"
lappend plain_out "Functions currently traced by call-graph:"
lappend plain_out "(gdb) "
check_so_far "Plain can clear call-graph tracers" plain_commands plain_out

unset plain_out
unset plain_commands

