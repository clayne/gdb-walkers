# Tool config file -- Store helper procedures in one place.
# We put them here instead of testsuite/config/unix.exp to match the suggested
# layout.
# Because the test makes the 
spawn gdb
# TODO Check no error warnings about my python extensions.
expect {
    "(gdb)" {}
    default {
        unresolved "Failed to spawn program"
    }
}

send "add-inferior -exec demos/tree\n"
send "add-inferior -exec demos/tree_debug\n"
# set timeout 5
# TODO For now assume we can never have a different inferior number (I don't
# see how we can), but later on I should parse the output of the command and
# read the inferior number just to be safe.
set plain_inferior 2
set debug_inferior 3
# expect {
#     "

proc run_basic_test { test_name commands expect_string } {
    global verbose
    global expect_out

    if { $verbose > 1 } {
        send_user "starting $command_line\n"
    }

    send $commands
    expect {
        $expect_string {
            pass "$test_name\n"
        }
        eof {
            fail "$test_name: EOF\n"
        }
        timeout {
            unresolved "$test_name: timeout\n $expect_out(buffer)"
        }
    }
}

proc wait_for_exit { exit_name } {
    send "cont\n"
    expect {
        "exited" {}
        default {
            unresolved "After test $exit_name couldn't finish!!"
        }
    }
}

proc ensure_finished { name } {
    # NOTE -- require all breakpoints to have either been disabled or deleted.
    # (or not in the code path to completion).
    send "cont\n"
    expect {
        "The program is not being run." {}
        "exited" {}
        default {
            unresolved "Couldn't ensure_finished at $name"
        }
    }
}

proc check_so_far { name command_name out_name} {
    upvar 1 $command_name commands $out_name out
    run_basic_test $name  "[join $commands \n]\n" [join $out "\r\n"]
    set commands ""
    set out ""
}

